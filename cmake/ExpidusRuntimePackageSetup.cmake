if(NOT PARSED_ARGS_APPLICATION_ID AND NOT PARSED_ARGS_BINARY_NAME AND NOT FLUTTER_MANAGED_DIR)
  message(FATAL_ERROR "You must not include \"ExpidusRuntimePackage\" directly, instead you must run it with \"add_expidus_compositor\" or \"add_expidus_application\".")
endif()

cmake_policy(SET CMP0063 NEW)
cmake_policy(SET CMP0087 NEW)

get_property(IS_MULTICONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)
if(WIN32 AND IS_MULTICONFIG)
  set(CMAKE_CONFIGURATION_TYPES "Debug;Profile;Release"
    CACHE STRING "" FORCE)
else()
  if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
    set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Flutter build mode" FORCE)
    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRING "Debug" "Profile" "Release")
  endif()
endif()

if(WIN32)
  set(CMAKE_EXE_LINKER_FLAGS_PROFILE "${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
  set(CMAKE_SHARED_LINKER_FLAGS_PROFILE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE}")
  set(CMAKE_C_FLAGS_PROFILE "${CMAKE_C_FLAGS_RELEASE}")
  set(CMAKE_CXX_FLAGS_PROFILE "${CMAKE_CXX_FLAGS_RELEASE}")
elseif(UNIX)
  set(CMAKE_INSTALL_RPATH "$ORIGIN/lib")

  if(FLUTTER_TARGET_PLATFORM_SYSROOT)
    set(CMAKE_SYSROOT ${FLUTTER_TARGET_PLATFORM_SYSROOT})
    set(CMAKE_FIND_ROOT_PATH ${CMAKE_SYSROOT})
    set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
    set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
    set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
    set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
  endif()
endif()

if(WIN32)
  add_definitions(-DUNICODE -D_UNICODE)
endif()

add_definitions(-DAPPLICATION_ID="${PARSED_ARGS_APPLICATION_ID}" -DBINARY_NAME="${PARSED_ARGS_BINARY_NAME}")
